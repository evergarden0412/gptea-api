definitions:
  internal.Chat:
    properties:
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: Hjejwerhj
        type: string
      name:
        example: basic
        type: string
    type: object
  internal.Message:
    properties:
      chatID:
        example: Hjejwerhj
        type: string
      content:
        type: string
      createdAt:
        type: string
      seq:
        description: seq starts from 1
        example: 1
        type: integer
    type: object
  internal.Scrapbook:
    properties:
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: Hjejwerhj
        type: string
      name:
        example: basic
        type: string
    type: object
  server.chatBody:
    properties:
      name:
        type: string
    type: object
  server.chatsResponse:
    properties:
      chats:
        items:
          $ref: '#/definitions/internal.Chat'
        type: array
    type: object
  server.credBody:
    properties:
      accessToken:
        type: string
      cred:
        example: naver
        type: string
    required:
    - accessToken
    - cred
    type: object
  server.errorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  server.messageResponse:
    properties:
      message:
        example: Hello, World!
        type: string
    type: object
  server.messagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/internal.Message'
        type: array
    type: object
  server.scrapbooksResponse:
    properties:
      scrapbooks:
        items:
          $ref: '#/definitions/internal.Scrapbook'
        type: array
    type: object
  server.scrapsResponse:
    properties:
      scraps:
        items:
          $ref: '#/definitions/internal.Message'
        type: array
    type: object
  server.signInHandlerOutput:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  server.tokenResponse:
    properties:
      exp:
        type: string
      iat:
        type: string
      jti:
        type: string
      sub:
        type: string
    type: object
host: api.gptea-test.keenranger.dev
info:
  contact: {}
  description: This is a sample server for GPTea API.
  title: GPTea API
  version: 0.1.0
paths:
  /auth/cred/register:
    post:
      description: Register a credential
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/server.credBody'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/server.messageResponse'
      summary: Register a credential
      tags:
      - auth
  /auth/cred/sign-in:
    post:
      description: Sign in with a credential
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/server.credBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.signInHandlerOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Sign in with a credential
      tags:
      - auth
  /auth/token/refresh:
    post:
      description: Refresh a token
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.signInHandlerOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      - RefreshTokenAuth: []
      summary: Refresh a token
      tags:
      - token
  /auth/token/verify:
    get:
      description: Verify a accesstoken
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Verify a token
      tags:
      - token
  /me:
    delete:
      description: Delete my account
      responses:
        "204":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Delete my account
      tags:
      - users
  /me/chats:
    get:
      description: Get my chats in descending order of created_at
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.chatsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Get my chats
      tags:
      - chats
    post:
      description: Post my chat
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/server.chatBody'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/server.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Post my chat
      tags:
      - chats
  /me/chats/:chatID/messages:
    get:
      description: Get my messages in descending order of created_at
      parameters:
      - description: chatID
        in: path
        name: chatID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.messagesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Get my messages
      tags:
      - messages
  /me/chats/{chatID}:
    delete:
      description: Delete my chat
      parameters:
      - description: chatID
        in: path
        name: chatID
        required: true
        type: string
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Delete my chat
      tags:
      - chats
    patch:
      description: Patch my chat name
      parameters:
      - description: chatID
        in: path
        name: chatID
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/server.chatBody'
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Patch my chat
      tags:
      - chats
  /me/scrapbooks:
    get:
      description: Get my scrapbooks
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.scrapbooksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Get my scrapbooks
      tags:
      - scraps
  /me/scrapbooks/:scrapbookID/scraps:
    get:
      description: Get my scraps in descending order of created_at
      parameters:
      - description: scrapbookID
        in: path
        name: scrapbookID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.scrapsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - AccessTokenAuth: []
      summary: Get my scraps
      tags:
      - scraps
securityDefinitions:
  AccessTokenAuth:
    description: type `Bearer {access_token}`
    in: header
    name: authorization
    type: apiKey
  RefreshTokenAuth:
    description: type `{refresh_token}`
    in: header
    name: x-refresh-token
    type: apiKey
swagger: "2.0"
